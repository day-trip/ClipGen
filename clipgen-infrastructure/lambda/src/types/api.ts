/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/jobs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List user's jobs */
        get: operations["listJobs"];
        put?: never;
        /** Create a new video generation job */
        post: operations["createJob"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/jobs/{jobId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get job status and results */
        get: operations["getJob"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        JobResponse: {
            /** @example job_abc123 */
            jobId: string;
            /** @enum {string} */
            status: "queued" | "processing" | "completed" | "failed";
            /** @description Position in queue (null if not queued) */
            queuePosition?: number | null;
            /** @description Download URL for generated MP4 video (null until completed) */
            videoUrl?: string | null;
            /** Format: date-time */
            createdAt: string;
            /** Format: date-time */
            completedAt?: string | null;
        };
        JobList: {
            jobs?: components["schemas"]["JobResponse"][];
            nextCursor?: string | null;
        };
    };
    responses: {
        /** @description Invalid request */
        BadRequest: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    /** @example Invalid audio format */
                    error?: string;
                };
            };
        };
        /** @description Rate limit exceeded */
        RateLimit: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    /** @example Rate limit exceeded. Try again in 60 seconds. */
                    error?: string;
                };
            };
        };
        /** @description Resource not found */
        NotFound: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": {
                    /** @example Job not found */
                    error?: string;
                };
            };
        };
    };
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    listJobs: {
        parameters: {
            query?: {
                limit?: number;
                cursor?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Jobs retrieved successfully */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["JobList"];
                };
            };
        };
    };
    createJob: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * @description Text prompt describing the desired video content
                     * @example A person speaking with excitement and gesticulating enthusiastically
                     */
                    prompt: string;
                    /**
                     * @description Video height in pixels (must be divisible by 32)
                     * @default 512
                     */
                    height?: number;
                    /**
                     * @description Video width in pixels (must be divisible by 32)
                     * @default 512
                     */
                    width?: number;
                    /**
                     * @description Number of frames to generate
                     * @default 65
                     */
                    num_frames?: number;
                    /**
                     * @description Video frame rate (fps)
                     * @default 24
                     * @enum {integer}
                     */
                    frame_rate?: 1 | 12 | 15 | 24 | 25 | 30 | 48 | 50 | 60;
                    /** @description Random seed for reproducible results */
                    seed?: number;
                    /**
                     * @description Negative prompt to avoid unwanted elements
                     * @default worst quality, inconsistent motion, blurry, jittery, distorted
                     */
                    negative_prompt?: string;
                };
            };
        };
        responses: {
            /** @description Job created successfully */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["JobResponse"];
                };
            };
            400: components["responses"]["BadRequest"];
            429: components["responses"]["RateLimit"];
        };
    };
    getJob: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                jobId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Job details */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["JobResponse"];
                };
            };
            404: components["responses"]["NotFound"];
        };
    };
}