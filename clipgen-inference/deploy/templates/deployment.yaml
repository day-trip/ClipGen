apiVersion: apps/v1
kind: Deployment
metadata:
  name: inference-worker
  labels:
    app: inference-worker
spec:
  replicas: {{ .Values.scaling.minReplicas }}
  selector:
    matchLabels:
      app: inference-worker
  template:
    metadata:
      labels:
        app: inference-worker
    spec:
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: worker
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000
              name: metrics
          env:
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: aws-credentials
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: aws-credentials
                  key: AWS_SECRET_ACCESS_KEY
            - name: AWS_DEFAULT_REGION
              value: {{ .Values.aws.region | quote }}
            - name: SQS_QUEUE_URL
              value: {{ .Values.aws.queueUrl | quote }}
            - name: JOB_TABLE_NAME
              value: {{ .Values.aws.jobTableName | quote }}
            - name: MEDIA_BUCKET_NAME
              value: {{ .Values.aws.mediaBucketName | quote }}
            - name: MAX_CONCURRENT_JOBS
              value: {{ .Values.worker.maxConcurrentJobs | quote }}
            - name: CUDA_VISIBLE_DEVICES
              value: {{ .Values.worker.cudaVisibleDevices | quote }}
            - name: MODEL_TYPE
              value: "mochi"

          # BIG TIMEOUTS FOR MODEL LOADING
          startupProbe:
            httpGet:
              path: /metrics  # Prometheus endpoint
              port: 8000
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 30  # 15 minutes total for runtime installation
          livenessProbe:
            httpGet:
              path: /metrics
              port: 8000
            initialDelaySeconds: 600  # 10 minutes after startup
            periodSeconds: 60
            timeoutSeconds: 30
            failureThreshold: 3
          volumeMounts:
            - name: model-storage
              mountPath: /tmp/mochi_models
            - name: shm
              mountPath: /dev/shm
          resources:
{{ toYaml .Values.resources | indent 12 }}
      volumes:
        - name: model-storage
          persistentVolumeClaim:
            claimName: mochi-models-pvc
        - name: shm
          emptyDir:
            medium: Memory
            sizeLimit: {{ .Values.resources.shmSize | default "32Gi" }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
